{"version":3,"file":"static/js/191.64200364.chunk.js","mappings":"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","sources":["logged_in/components/subscription/stripe/StripeTextField.js","logged_in/components/subscription/stripe/StripeCardForm.js","logged_in/components/subscription/stripe/StripeIBANForm.js","logged_in/components/subscription/AddBalanceDialog.js","shared/components/ColoredButton.js","shared/components/DialogTitleWithCloseIcon.js","shared/components/FormDialog.js"],"sourcesContent":["import React from \"react\";\nimport { TextField } from \"@mui/material\";\nimport withTheme from \"@mui/styles/withTheme\";\n\nfunction StripeTextField(props) {\n  const { stripeOptions, StripeElement, select, theme, ...rest } = props;\n  const options = {\n    style: {\n      base: {\n        ...theme.typography.body1,\n        color: theme.palette.text.primary,\n        fontSize: \"16px\",\n        fontSmoothing: \"antialiased\",\n        \"::placeholder\": {\n          color: theme.palette.text.secondary,\n        },\n      },\n      invalid: {\n        iconColor: theme.palette.error.main,\n        color: theme.palette.error.main,\n      },\n    },\n    ...stripeOptions,\n  };\n  return (\n    <TextField\n      InputLabelProps={{\n        shrink: true,\n      }}\n      inputProps={{ component: StripeElement, options: options }}\n      {...rest}\n    />\n  );\n}\n\nexport default withTheme(StripeTextField);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TextField, Grid, InputAdornment } from \"@mui/material\";\nimport { CardElement } from \"@stripe/react-stripe-js\";\nimport StripeTextField from \"./StripeTextField\";\n\nfunction StripeCardForm(props) {\n  const {\n    stripeError,\n    setStripeError,\n    amount,\n    amountError,\n    onAmountChange,\n    name,\n    setName\n  } = props;\n  return (\n    <Grid container spacing={2} justifyContent=\"space-between\">\n      <Grid item xs={8}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"none\"\n          required\n          label=\"Your Name\"\n          value={name}\n          onChange={event => {\n            setName(event.target.value);\n          }}\n          fullWidth\n          autoFocus\n          autoComplete=\"off\"\n          type=\"text\"\n        />\n      </Grid>\n      <Grid item xs={4}>\n        <TextField\n          required\n          value={amount}\n          onChange={event => {\n            onAmountChange(parseInt(event.target.value));\n          }}\n          error={amountError ? true : false}\n          helperText={amountError}\n          variant=\"outlined\"\n          fullWidth\n          type=\"number\"\n          margin=\"none\"\n          label=\"Amount\"\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">$</InputAdornment>\n          }}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <StripeTextField\n          margin=\"none\"\n          fullWidth\n          label=\"Credit Card\"\n          error={stripeError ? true : false}\n          helperText={stripeError}\n          variant=\"outlined\"\n          required\n          StripeElement={CardElement}\n          onChange={() => {\n            if (stripeError) {\n              setStripeError(\"\");\n            }\n          }}\n        ></StripeTextField>\n      </Grid>\n    </Grid>\n  );\n}\n\nStripeCardForm.propTypes = {\n  stripeError: PropTypes.string.isRequired,\n  setStripeError: PropTypes.func.isRequired,\n  amount: PropTypes.number.isRequired,\n  onAmountChange: PropTypes.func.isRequired,\n  amountError: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  setName: PropTypes.func.isRequired\n};\n\nexport default StripeCardForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TextField, Grid, InputAdornment } from \"@mui/material\";\nimport StripeTextField from \"./StripeTextField\";\nimport { IbanElement } from \"@stripe/react-stripe-js\";\n\nfunction StripeIBANForm(props) {\n  const {\n    stripeError,\n    setStripeError,\n    amount,\n    amountError,\n    onAmountChange,\n    name,\n    setName,\n    email,\n    setEmail\n  } = props;\n  return (\n    <Grid container spacing={2} justifyContent=\"space-between\">\n      <Grid item xs={8}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"none\"\n          required\n          label=\"Your Name\"\n          value={name}\n          onChange={event => {\n            setName(event.target.value);\n          }}\n          fullWidth\n          autoFocus\n          autoComplete=\"off\"\n          type=\"text\"\n        />\n      </Grid>\n      <Grid item xs={4}>\n        <TextField\n          required\n          value={amount}\n          onChange={event => {\n            onAmountChange(parseInt(event.target.value));\n          }}\n          error={amountError ? true : false}\n          helperText={amountError}\n          variant=\"outlined\"\n          fullWidth\n          type=\"number\"\n          margin=\"none\"\n          label=\"Amount\"\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">$</InputAdornment>\n          }}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <TextField\n          required\n          variant=\"outlined\"\n          fullWidth\n          value={email}\n          onChange={event => {\n            setEmail(event.target.value);\n          }}\n          type=\"email\"\n          margin=\"none\"\n          label=\"Email\"\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <StripeTextField\n          margin=\"none\"\n          variant=\"outlined\"\n          fullWidth\n          label=\"IBAN\"\n          error={stripeError ? true : false}\n          helperText={stripeError}\n          required\n          StripeElement={IbanElement}\n          stripeOptions={{ supportedCountries: [\"SEPA\"] }}\n          onChange={() => {\n            if (stripeError) {\n              setStripeError(\"\");\n            }\n          }}\n        ></StripeTextField>\n      </Grid>\n    </Grid>\n  );\n}\n\nStripeIBANForm.propTypes = {\n  stripeError: PropTypes.string.isRequired,\n  setStripeError: PropTypes.func.isRequired,\n  amount: PropTypes.number.isRequired,\n  onAmountChange: PropTypes.func.isRequired,\n  amountError: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  setName: PropTypes.func.isRequired,\n  email: PropTypes.string.isRequired,\n  setEmail: PropTypes.func.isRequired\n};\n\nexport default StripeIBANForm;\n","import React, { useState, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport {\n  Elements,\n  CardElement,\n  IbanElement,\n  useStripe,\n  useElements\n} from \"@stripe/react-stripe-js\";\nimport { Grid, Button, Box } from \"@mui/material\";\nimport withTheme from '@mui/styles/withTheme';\nimport StripeCardForm from \"./stripe/StripeCardForm\";\nimport StripeIbanForm from \"./stripe/StripeIBANForm\";\nimport FormDialog from \"../../../shared/components/FormDialog\";\nimport ColoredButton from \"../../../shared/components/ColoredButton\";\nimport HighlightedInformation from \"../../../shared/components/HighlightedInformation\";\nimport ButtonCircularProgress from \"../../../shared/components/ButtonCircularProgress\";\n\nconst stripePromise = loadStripe(\"pk_test_6pRNASCoBOKtIshFeQd4XMUh\");\n\nconst paymentOptions = [\"Credit Card\", \"SEPA Direct Debit\"];\n\nconst AddBalanceDialog = withTheme(function (props) {\n  const { open, theme, onClose, onSuccess } = props;\n\n  const [loading, setLoading] = useState(false);\n  const [paymentOption, setPaymentOption] = useState(\"Credit Card\");\n  const [stripeError, setStripeError] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [amount, setAmount] = useState(0);\n  const [amountError, setAmountError] = useState(\"\");\n  const elements = useElements();\n  const stripe = useStripe();\n\n  const onAmountChange = amount => {\n    if (amount < 0) {\n      return;\n    }\n    if (amountError) {\n      setAmountError(\"\");\n    }\n    setAmount(amount);\n  };\n\n  const getStripePaymentInfo = () => {\n    switch (paymentOption) {\n      case \"Credit Card\": {\n        return {\n          type: \"card\",\n          card: elements.getElement(CardElement),\n          billing_details: { name: name }\n        };\n      }\n      case \"SEPA Direct Debit\": {\n        return {\n          type: \"sepa_debit\",\n          sepa_debit: elements.getElement(IbanElement),\n          billing_details: { email: email, name: name }\n        };\n      }\n      default:\n        throw new Error(\"No case selected in switch statement\");\n    }\n  };\n\n  const renderPaymentComponent = () => {\n    switch (paymentOption) {\n      case \"Credit Card\":\n        return (\n          <Fragment>\n            <Box mb={2}>\n              <StripeCardForm\n                stripeError={stripeError}\n                setStripeError={setStripeError}\n                setName={setName}\n                name={name}\n                amount={amount}\n                amountError={amountError}\n                onAmountChange={onAmountChange}\n              />\n            </Box>\n            <HighlightedInformation>\n              You can check this integration using the credit card number{\" \"}\n              <b>4242 4242 4242 4242 04 / 24 24 242 42424</b>\n            </HighlightedInformation>\n          </Fragment>\n        );\n      case \"SEPA Direct Debit\":\n        return (\n          <Fragment>\n            <Box mb={2}>\n              <StripeIbanForm\n                stripeError={stripeError}\n                setStripeError={setStripeError}\n                setName={setName}\n                setEmail={setEmail}\n                name={name}\n                email={email}\n                amount={amount}\n                amountError={amountError}\n                onAmountChange={onAmountChange}\n              />\n            </Box>\n            <HighlightedInformation>\n              You can check this integration using the IBAN\n              <br />\n              <b>DE89370400440532013000</b>\n            </HighlightedInformation>\n          </Fragment>\n        );\n      default:\n        throw new Error(\"No case selected in switch statement\");\n    }\n  };\n\n  return (\n    <FormDialog\n      open={open}\n      onClose={onClose}\n      headline=\"Add Balance\"\n      hideBackdrop={false}\n      loading={loading}\n      onFormSubmit={async event => {\n        event.preventDefault();\n        if (amount <= 0) {\n          setAmountError(\"Can't be zero\");\n          return;\n        }\n        if (stripeError) {\n          setStripeError(\"\");\n        }\n        setLoading(true);\n        const { error } = await stripe.createPaymentMethod(\n          getStripePaymentInfo()\n        );\n        if (error) {\n          setStripeError(error.message);\n          setLoading(false);\n          return;\n        }\n        onSuccess();\n      }}\n      content={\n        <Box pb={2}>\n          <Box mb={2}>\n            <Grid container spacing={1}>\n              {paymentOptions.map(option => (\n                <Grid item key={option}>\n                  <ColoredButton\n                    variant={\n                      option === paymentOption ? \"contained\" : \"outlined\"\n                    }\n                    disableElevation\n                    onClick={() => {\n                      setStripeError(\"\");\n                      setPaymentOption(option);\n                    }}\n                    color={theme.palette.common.black}\n                  >\n                    {option}\n                  </ColoredButton>\n                </Grid>\n              ))}\n            </Grid>\n          </Box>\n          {renderPaymentComponent()}\n        </Box>\n      }\n      actions={\n        <Fragment>\n          <Button\n            fullWidth\n            variant=\"contained\"\n            color=\"secondary\"\n            type=\"submit\"\n            size=\"large\"\n            disabled={loading}\n          >\n            Pay with Stripe {loading && <ButtonCircularProgress />}\n          </Button>\n        </Fragment>\n      }\n    />\n  );\n});\n\nAddBalanceDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  theme: PropTypes.object.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onSuccess: PropTypes.func.isRequired\n};\n\nfunction Wrapper(props) {\n  const { open, onClose, onSuccess } = props;\n  return (\n    <Elements stripe={stripePromise}>\n      {open && (\n        <AddBalanceDialog open={open} onClose={onClose} onSuccess={onSuccess} />\n      )}\n    </Elements>\n  );\n}\n\n\nWrapper.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onSuccess: PropTypes.func.isRequired\n};\n\nexport default Wrapper;\n","import React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, createTheme, ThemeProvider, StyledEngineProvider, adaptV4Theme } from \"@mui/material\";\n\nfunction ColoredButton(props) {\n  const { color, children, theme } = props;\n  const buttonTheme = createTheme(adaptV4Theme({\n    ...theme,\n    palette: {\n      primary: {\n        main: color\n      }\n    }\n  }));\n  const buttonProps = (({ color, theme, children, ...o }) => o)(props);\n  return (\n    <StyledEngineProvider injectFirst>\n      <ThemeProvider theme={buttonTheme}>\n        <Button {...buttonProps} color=\"primary\">\n          {children}\n        </Button>\n      </ThemeProvider>\n    </StyledEngineProvider>\n  );\n}\n\nColoredButton.propTypes = {\n  color: PropTypes.string.isRequired\n};\n\nexport default memo(ColoredButton);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { IconButton, DialogTitle, Typography, Box } from \"@mui/material\";\nimport withTheme from '@mui/styles/withTheme';\nimport CloseIcon from \"@mui/icons-material/Close\";\n\nfunction DialogTitleWithCloseIcon(props) {\n  const {\n    theme,\n    paddingBottom,\n    onClose,\n    disabled,\n    title,\n    disablePadding\n  } = props;\n  return (\n    <DialogTitle\n      style={{\n        paddingBottom: paddingBottom\n          ? paddingBottom && disablePadding\n            ? 0\n            : paddingBottom\n          : theme.spacing(3),\n        paddingLeft: disablePadding ? 0 : null,\n        paddingRight: disablePadding ? 0 : null,\n        paddingTop: disablePadding ? 0 : theme.spacing(2),\n        width: \"100%\"\n      }}>\n      <Box display=\"flex\" justifyContent=\"space-between\">\n        <Typography variant=\"h5\">{title}</Typography>\n        <IconButton\n          onClick={onClose}\n          style={{ marginRight: -12, marginTop: -10 }}\n          disabled={disabled}\n          aria-label=\"Close\"\n          size=\"large\">\n          <CloseIcon />\n        </IconButton>\n      </Box>\n    </DialogTitle>\n  );\n}\n\nDialogTitleWithCloseIcon.propTypes = {\n  theme: PropTypes.object,\n  paddingBottom: PropTypes.number,\n  onClose: PropTypes.func,\n  disabled: PropTypes.bool,\n  title: PropTypes.string,\n  disablePadding: PropTypes.bool\n};\n\nexport default withTheme(DialogTitleWithCloseIcon);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Dialog, DialogContent, Box } from \"@mui/material\";\nimport withStyles from '@mui/styles/withStyles';\nimport DialogTitleWithCloseIcon from \"./DialogTitleWithCloseIcon\";\n\nconst styles = theme => ({\n  dialogPaper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    paddingBottom: theme.spacing(3),\n    maxWidth: 420\n  },\n  actions: {\n    marginTop: theme.spacing(2)\n  },\n  dialogPaperScrollPaper: {\n    maxHeight: \"none\"\n  },\n  dialogContent: {\n    paddingTop: 0,\n    paddingBottom: 0\n  }\n});\n\n/**\n * A Wrapper around the Dialog component to create centered\n * Login, Register or other Dialogs.\n */\nfunction FormDialog(props) {\n  const {\n    classes,\n    open,\n    onClose,\n    loading,\n    headline,\n    onFormSubmit,\n    content,\n    actions,\n    hideBackdrop\n  } = props;\n  return (\n    <Dialog\n      open={open}\n      onClose={onClose}\n      disableEscapeKeyDown={loading}\n      classes={{\n        paper: classes.dialogPaper,\n        paperScrollPaper: classes.dialogPaperScrollPaper\n      }}\n      hideBackdrop={hideBackdrop ? hideBackdrop : false}>\n      <DialogTitleWithCloseIcon\n        title={headline}\n        onClose={onClose}\n        disabled={loading}\n      />\n      <DialogContent className={classes.dialogContent}>\n        <form onSubmit={onFormSubmit}>\n          <div>{content}</div>\n          <Box width=\"100%\" className={classes.actions}>\n            {actions}\n          </Box>\n        </form>\n      </DialogContent>\n    </Dialog>\n  );\n}\n\nFormDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  headline: PropTypes.string.isRequired,\n  loading: PropTypes.bool.isRequired,\n  onFormSubmit: PropTypes.func.isRequired,\n  content: PropTypes.element.isRequired,\n  actions: PropTypes.element.isRequired,\n  hideBackdrop: PropTypes.bool.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(FormDialog);\n"],"names":["withTheme","props","stripeOptions","StripeElement","theme","select","rest","options","style","base","typography","body1","color","palette","text","primary","fontSize","fontSmoothing","secondary","invalid","iconColor","error","main","TextField","InputLabelProps","shrink","inputProps","component","stripeError","setStripeError","amount","amountError","onAmountChange","name","setName","Grid","container","spacing","justifyContent","item","xs","variant","margin","required","label","value","onChange","event","target","fullWidth","autoFocus","autoComplete","type","parseInt","helperText","InputProps","startAdornment","InputAdornment","position","CardElement","email","setEmail","IbanElement","supportedCountries","stripePromise","loadStripe","paymentOptions","AddBalanceDialog","open","onClose","onSuccess","useState","loading","setLoading","paymentOption","setPaymentOption","setAmount","setAmountError","elements","useElements","stripe","useStripe","getStripePaymentInfo","card","getElement","billing_details","sepa_debit","Error","FormDialog","headline","hideBackdrop","onFormSubmit","preventDefault","createPaymentMethod","message","content","Box","pb","mb","map","option","ColoredButton","disableElevation","onClick","common","black","Fragment","HighlightedInformation","renderPaymentComponent","actions","Button","size","disabled","ButtonCircularProgress","Elements","children","buttonTheme","createTheme","adaptV4Theme","buttonProps","injectFirst","memo","paddingBottom","title","disablePadding","DialogTitle","paddingLeft","paddingRight","paddingTop","width","display","Typography","IconButton","marginRight","marginTop","Close","withStyles","dialogPaper","flexDirection","alignItems","maxWidth","dialogPaperScrollPaper","maxHeight","dialogContent","classes","Dialog","disableEscapeKeyDown","paper","paperScrollPaper","DialogContent","className","onSubmit"],"sourceRoot":""}